name: CI

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/**/*.md'
  pull_request:
    branches: [main, staging, development]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/**/*.md'

permissions:
  contents: read
  pull-requests: read

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-dependencies.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.8.1'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '8'
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.STORE_PATH }}
            **/node_modules
            **/.turbo
            **/.next/cache
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: pnpm install

  lint:
    needs: setup
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.8.1'
      - uses: pnpm/action-setup@v2
        with:
          version: '8'

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.STORE_PATH }}
            **/node_modules
            **/.turbo
            **/.next/cache
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install

      - name: Check formatting
        run: pnpm prettier --check .

      - name: Run ESLint
        run: pnpm eslint . --max-warnings 0

      - name: Validate commit messages
        uses: wagoid/commitlint-github-action@v5
        with:
          configFile: ./commitlint.config.js
          failOnWarnings: true
          commitDepth: 10

  type-check:
    needs: setup
    name: Type Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ['shared', 'ui', 'frontend', 'backend']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.8.1'
      - uses: pnpm/action-setup@v2
        with:
          version: '8'

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.STORE_PATH }}
            **/node_modules
            **/.turbo
            **/.next/cache
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install

      - name: Type check
        run: pnpm --filter "@easylink/${{ matrix.package }}" type-check

  test:
    needs: setup
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.8.1'
      - uses: pnpm/action-setup@v2
        with:
          version: '8'

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.STORE_PATH }}
            **/node_modules
            **/.turbo
            **/.next/cache
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm test
        continue-on-error: true

  build:
    needs: [lint, type-check, test]
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.8.1'
      - uses: pnpm/action-setup@v2
        with:
          version: '8'

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.STORE_PATH }}
            **/node_modules
            **/.turbo
            **/.next/cache
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install

      - name: Build packages
        run: pnpm build
        continue-on-error: true

      - name: Generate documentation
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: pnpm typedoc
