name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, staging, development]

permissions:
  contents: read
  pull-requests: read

env:
  STORE_PATH: ~/.pnpm-store

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.value }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate cache key
        id: cache-key
        run: echo "value=${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}" >> $GITHUB_OUTPUT

      - uses: actions/setup-node@v4
        with:
          node-version: '20.8.1'

      - uses: pnpm/action-setup@v2
        with:
          version: '8'
          run_install: false

      - uses: actions/cache@v3
        with:
          path: |
            ${{ env.STORE_PATH }}
            **/node_modules
          key: ${{ steps.cache-key.outputs.value }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.8.1'
      - uses: pnpm/action-setup@v2
        with:
          version: '8'
          run_install: false
      - uses: actions/cache@v3
        with:
          path: |
            ${{ env.STORE_PATH }}
            **/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Validate commit messages
        uses: wagoid/commitlint-github-action@v5
        with:
          configFile: ./commitlint.config.js
          failOnWarnings: true
          commitDepth: 10

      - name: Check formatting and lint
        run: |
          pnpm prettier --check .
          pnpm eslint . --max-warnings 0

  typecheck:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.8.1'
      - uses: pnpm/action-setup@v2
        with:
          version: '8'
          run_install: false
      - uses: actions/cache@v3
        with:
          path: |
            ${{ env.STORE_PATH }}
            **/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Type check all packages
        run: pnpm type-check

  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.8.1'
      - uses: pnpm/action-setup@v2
        with:
          version: '8'
          run_install: false
      - uses: actions/cache@v3
        with:
          path: |
            ${{ env.STORE_PATH }}
            **/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Run tests
        run: pnpm test
        continue-on-error: true

  build:
    needs: [setup, lint, typecheck]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.8.1'
      - uses: pnpm/action-setup@v2
        with:
          version: '8'
          run_install: false
      - uses: actions/cache@v3
        with:
          path: |
            ${{ env.STORE_PATH }}
            **/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Validate workspace
        run: pnpm dedupe --check

      - name: Build packages
        run: pnpm build

      - name: Generate documentation
        run: pnpm typedoc
        continue-on-error: true
